# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.96.0"


default_platform :ios

platform :ios do
  before_all do
    ENV["HIPCHAT_API_TOKEN"] = "7dfad51c150d07ee09db070db03e43"
    ENV["HIPCHAT_API_VERSION"] = "1"
    ENV["FASTLANE_XCODE_LIST_TIMEOUT"] = "120"
    cocoapods
  end

  desc "Runs all the tests"
  lane :test do
    scan(
  workspace: "RedRooster.xcworkspace",
  scheme: "RedRooster",
  devices: ["iPhone 6s", "iPhone 6s Plus"]
)
  end

  desc "Submit a new Beta Build to CrashlyticsBeta"
  lane :CrashlyticsBeta do
    increment_build_number
    gym(
    use_legacy_build_api: true,
    workspace: "RedRooster.xcworkspace",
    configuration: "Debug",
    scheme: "RedRooster",
    silent: true,
    clean: true,
    output_directory: "../CrashlyticsBetaBuilds", # Destination directory. Defaults to current directory.
    output_name: "RedRooster.ipa", # specify the name of the .ipa file to generate (including file extension)
    )
    crashlytics(
    crashlytics_path: 'Pods/Crashlytics/iOS/Crashlytics.framework', # path to your 'Crashlytics.framework'
    api_token: 'bc1f33eeac709525cbdba0a17a37a8340a0aac75',
    build_secret: '65bd9f76ecd5e5d4aebaa2d0bbac495e5bcb78bbba4ddbc0277ae85b4b4c94f7',
    ipa_path: '../CrashlyticsBetaBuilds/RedRooster.ipa',
    notes: 'Latest Beta build',
    groups: ["internal-testers"]
    )
  end

  desc "Deploy a new version to the App Store"
  lane :appstore do
    # match(type: "appstore")
    # snapshot
    gym # Build your app - more options available

    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

hipchat({
  message: "Successfully uploaded RedRooster to Crashlytics!",
  channel: "crashlytics",
  success: true
})
  end

  error do |lane, exception|
hipchat({
  message: "Failed uploaded RedRooster to Crashlytics!",
  channel: "crashlytics",
  success: false
})
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
